  private void Image_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
        {
            if (image.IsMouseCaptured) return;
            image.CaptureMouse();

            start = e.GetPosition(this);
            origin.X = canvas1.RenderTransform.Value.OffsetX;
            origin.Y = canvas1.RenderTransform.Value.OffsetY;
        }

        private void Image_MouseMove(object sender, MouseEventArgs e)
        {
            if (!image.IsMouseCaptured) return;
            Point p = e.MouseDevice.GetPosition(this);

            Matrix m = canvas1.RenderTransform.Value;
            m.OffsetX = origin.X + (p.X - start.X);
            m.OffsetY = origin.Y + (p.Y - start.Y);

            Console.WriteLine("-----------p----------");
            Console.WriteLine(p.X);
            Console.WriteLine(p.Y);
            Console.WriteLine("----------Start----------");
            Console.WriteLine(start.X);
            Console.WriteLine(start.Y);
            Console.WriteLine("----------origin----------");
            Console.WriteLine(origin.X);
            Console.WriteLine(origin.Y);

            Point p2 = e.MouseDevice.GetPosition(canvas1);

            canvas1.RenderTransform = new MatrixTransform(m);

        }

        private void Image_MouseWheel(object sender, MouseWheelEventArgs e)
        {
            Point p = e.MouseDevice.GetPosition(canvas1);

            Matrix m = canvas1.RenderTransform.Value;
            if (e.Delta > 0)
                m.ScaleAtPrepend(1.2, 1.2, p.X, p.Y);
            else
                m.ScaleAtPrepend(1 / 1.2, 1 / 1.2, p.X, p.Y);

            canvas1.RenderTransform = new MatrixTransform(m);
        }

        private void Image_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)
        {
            image.ReleaseMouseCapture();
            canvas1.ReleaseMouseCapture();
        }
